"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/merge/route";
exports.ids = ["app/api/merge/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "sharp":
/*!************************!*\
  !*** external "sharp" ***!
  \************************/
/***/ ((module) => {

module.exports = require("sharp");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmerge%2Froute&page=%2Fapi%2Fmerge%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmerge%2Froute.ts&appDir=D%3A%5CCursor%5Cface2exchange%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCursor%5Cface2exchange&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmerge%2Froute&page=%2Fapi%2Fmerge%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmerge%2Froute.ts&appDir=D%3A%5CCursor%5Cface2exchange%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCursor%5Cface2exchange&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/node-polyfill-headers */ \"(rsc)/./node_modules/next/dist/server/node-polyfill-headers.js\");\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var D_Cursor_face2exchange_app_api_merge_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/merge/route.ts */ \"(rsc)/./app/api/merge/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__.RouteKind.APP_ROUTE,\n        page: \"/api/merge/route\",\n        pathname: \"/api/merge\",\n        filename: \"route\",\n        bundlePath: \"app/api/merge/route\"\n    },\n    resolvedPagePath: \"D:\\\\Cursor\\\\face2exchange\\\\app\\\\api\\\\merge\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_Cursor_face2exchange_app_api_merge_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/merge/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZtZXJnZSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGbWVyZ2UlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZtZXJnZSUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDQ3Vyc29yJTVDZmFjZTJleGNoYW5nZSU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9RCUzQSU1Q0N1cnNvciU1Q2ZhY2UyZXhjaGFuZ2UmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0Q7QUFDc0Q7QUFDdkM7QUFDa0I7QUFDakY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDaUo7O0FBRWpKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmFjZS1zd2FwLWFwcC8/NjYwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCJuZXh0L2Rpc3Qvc2VydmVyL25vZGUtcG9seWZpbGwtaGVhZGVyc1wiO1xuaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiRDpcXFxcQ3Vyc29yXFxcXGZhY2UyZXhjaGFuZ2VcXFxcYXBwXFxcXGFwaVxcXFxtZXJnZVxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbWVyZ2Uvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9tZXJnZVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvbWVyZ2Uvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJEOlxcXFxDdXJzb3JcXFxcZmFjZTJleGNoYW5nZVxcXFxhcHBcXFxcYXBpXFxcXG1lcmdlXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL21lcmdlL3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmerge%2Froute&page=%2Fapi%2Fmerge%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmerge%2Froute.ts&appDir=D%3A%5CCursor%5Cface2exchange%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCursor%5Cface2exchange&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/merge/route.ts":
/*!********************************!*\
  !*** ./app/api/merge/route.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sharp */ \"sharp\");\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sharp__WEBPACK_IMPORTED_MODULE_1__);\n\n\nasync function compressImage(file) {\n    try {\n        const buffer = await file.arrayBuffer();\n        const fileBuffer = Buffer.from(buffer);\n        const randomQuality = 0.59 + Math.random() * (0.99 - 0.59);\n        const finalQuality = Math.floor(80 * randomQuality);\n        console.log(\"压缩质量系数:\", randomQuality.toFixed(6));\n        console.log(\"最终压缩质量:\", finalQuality);\n        const compressedBuffer = await sharp__WEBPACK_IMPORTED_MODULE_1___default()(fileBuffer).resize(1920, 1920, {\n            fit: \"inside\",\n            withoutEnlargement: true\n        }).jpeg({\n            quality: finalQuality,\n            progressive: true\n        }).toBuffer();\n        const compressedFile = new File([\n            compressedBuffer\n        ], file.name, {\n            type: \"image/jpeg\"\n        });\n        console.log(\"压缩前大小:\", (file.size / 1024 / 1024).toFixed(2) + \"MB\");\n        console.log(\"压缩后大小:\", (compressedFile.size / 1024 / 1024).toFixed(2) + \"MB\");\n        return compressedFile;\n    } catch (error) {\n        console.error(\"图片压缩失败:\", error);\n        return file;\n    }\n}\nasync function uploadToImageHub(file, retryCount = 0) {\n    try {\n        const formData = new FormData();\n        formData.append(\"source\", file);\n        const response = await fetch(process.env.IMAGEHUB_API_URL, {\n            method: \"POST\",\n            headers: {\n                \"X-API-Key\": process.env.IMAGEHUB_API_KEY\n            },\n            body: formData\n        });\n        if (!response.ok) {\n            throw new Error(\"图片上传失败\");\n        }\n        const result = await response.json();\n        console.log(\"图床上传响应:\", result);\n        if (result.status_code !== 200) {\n            throw new Error(result.status_txt || \"图片上传失败\");\n        }\n        return result.image.url;\n    } catch (error) {\n        if (retryCount < 2) {\n            console.log(`上传失败，尝试压缩后重新上传 (第${retryCount + 1}次)...`);\n            const compressedFile = await compressImage(file instanceof File ? file : new File([\n                file\n            ], \"image.jpg\"));\n            return uploadToImageHub(compressedFile, retryCount + 1);\n        }\n        throw error;\n    }\n}\nasync function downloadAndUploadImage(url) {\n    try {\n        console.log(\"开始下载图片:\", url);\n        const response = await fetch(url);\n        if (!response.ok) throw new Error(\"图片下载失败\");\n        const blob = await response.blob();\n        console.log(\"图片下载完成，开始上传到图床\");\n        return await uploadToImageHub(blob);\n    } catch (error) {\n        console.error(\"下载并上传图片失败:\", error);\n        throw error;\n    }\n}\nasync function POST(request) {\n    try {\n        // 验证环境变量\n        const requiredEnvVars = [\n            \"WORKFLOW_ID\",\n            \"COZE_API_URL\",\n            \"AUTHORIZATION\",\n            \"IMAGEHUB_API_URL\",\n            \"IMAGEHUB_API_KEY\"\n        ];\n        for (const envVar of requiredEnvVars){\n            if (!process.env[envVar]) {\n                console.error(`缺少必要的环境变量: ${envVar}`);\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    error: `服务器配置错误: 缺少环境变量 ${envVar}`,\n                    errorType: \"ConfigError\"\n                }, {\n                    status: 500,\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n            }\n        }\n        const formData = await request.formData();\n        const image1 = formData.get(\"image1\");\n        const image2 = formData.get(\"image2\");\n        if (!image1 || !image2) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"请提供两张图片\",\n                errorType: \"ValidationError\"\n            }, {\n                status: 400,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        // 验证图片大小和类型\n        const maxSize = 5 * 1024 * 1024 // 5MB\n        ;\n        if (image1.size > maxSize || image2.size > maxSize) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"图片大小不能超过5MB\",\n                errorType: \"ValidationError\"\n            }, {\n                status: 400,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        if (!image1.type.startsWith(\"image/\") || !image2.type.startsWith(\"image/\")) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"请上传有效的图片文件\",\n                errorType: \"ValidationError\"\n            }, {\n                status: 400,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        console.log(\"开始上传原始图片到图床...\");\n        console.log(\"图片1信息:\", {\n            name: image1.name,\n            type: image1.type,\n            size: `${(image1.size / 1024).toFixed(2)}KB`\n        });\n        console.log(\"图片2信息:\", {\n            name: image2.name,\n            type: image2.type,\n            size: `${(image2.size / 1024).toFixed(2)}KB`\n        });\n        try {\n            const [image1Url, image2Url] = await Promise.all([\n                uploadToImageHub(image1),\n                uploadToImageHub(image2)\n            ]);\n            console.log(\"原始图片上传成功:\");\n            console.log(\"图片1 URL:\", image1Url);\n            console.log(\"图片2 URL:\", image2Url);\n            console.log(\"准备调用 Coze API...\");\n            const requestBody = {\n                workflow_id: process.env.WORKFLOW_ID.trim(),\n                parameters: {\n                    face_image: image1Url,\n                    base_image: image2Url\n                }\n            };\n            console.log(\"Coze API 请求体:\", JSON.stringify(requestBody, null, 2));\n            const response = await fetch(process.env.COZE_API_URL, {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": `Bearer ${process.env.AUTHORIZATION.trim()}`,\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\",\n                    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\",\n                    \"Origin\": \"https://www.coze.cn\",\n                    \"Referer\": \"https://www.coze.cn/\"\n                },\n                body: JSON.stringify(requestBody)\n            });\n            console.log(\"Coze API 响应状态:\", response.status);\n            console.log(\"Coze API 响应头:\", Object.fromEntries(response.headers.entries()));\n            const responseText = await response.text();\n            console.log(\"Coze API 原始响应:\", responseText);\n            let result;\n            try {\n                result = JSON.parse(responseText);\n            } catch (e) {\n                console.error(\"解析 Coze API 响应失败:\", e);\n                throw new Error(\"无法解析 Coze API 响应\");\n            }\n            console.log(\"Coze API 响应数据:\", JSON.stringify(result, null, 2));\n            if (!response.ok) {\n                throw new Error(`Coze API 错误: ${response.status} - ${JSON.stringify(result)}`);\n            }\n            if (result.code !== 0) {\n                throw new Error(result.msg || \"处理失败\");\n            }\n            // 解析返回的数据\n            let outputData;\n            try {\n                outputData = typeof result.data === \"string\" ? JSON.parse(result.data) : result.data;\n                console.log(\"解析后的输出数据:\", outputData);\n                if (!outputData.output) {\n                    throw new Error(\"输出数据缺少图片URL\");\n                }\n                console.log(\"开始上传生成的图片到图床...\");\n                const finalImageUrl = await downloadAndUploadImage(outputData.output);\n                console.log(\"生成的图片上传成功:\", finalImageUrl);\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    resultUrl: finalImageUrl,\n                    originalUrl: outputData.output,\n                    rawResponse: result\n                });\n            } catch (e) {\n                console.error(\"处理返回数据失败:\", e);\n                console.log(\"原始返回数据:\", result.data);\n                throw new Error(\"处理返回数据失败\");\n            }\n        } catch (uploadError) {\n            console.error(\"图片处理过程错误:\", uploadError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: uploadError instanceof Error ? uploadError.message : \"图片处理失败\",\n                errorType: \"ProcessError\",\n                details: uploadError instanceof Error ? uploadError.stack : undefined\n            }, {\n                status: 500,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n    } catch (error) {\n        console.error(\"API错误:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: error instanceof Error ? error.message : \"处理失败\",\n            errorType: \"ServerError\",\n            timestamp: new Date().toISOString(),\n            details: error instanceof Error ? error.stack : undefined\n        }, {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/merge/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmerge%2Froute&page=%2Fapi%2Fmerge%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmerge%2Froute.ts&appDir=D%3A%5CCursor%5Cface2exchange%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCursor%5Cface2exchange&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();