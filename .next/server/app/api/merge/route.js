"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/merge/route";
exports.ids = ["app/api/merge/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "sharp":
/*!************************!*\
  !*** external "sharp" ***!
  \************************/
/***/ ((module) => {

module.exports = require("sharp");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmerge%2Froute&page=%2Fapi%2Fmerge%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmerge%2Froute.ts&appDir=D%3A%5CCursor%5Cface2exchange%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCursor%5Cface2exchange&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmerge%2Froute&page=%2Fapi%2Fmerge%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmerge%2Froute.ts&appDir=D%3A%5CCursor%5Cface2exchange%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCursor%5Cface2exchange&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/node-polyfill-headers */ \"(rsc)/./node_modules/next/dist/server/node-polyfill-headers.js\");\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var D_Cursor_face2exchange_app_api_merge_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/merge/route.ts */ \"(rsc)/./app/api/merge/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__.RouteKind.APP_ROUTE,\n        page: \"/api/merge/route\",\n        pathname: \"/api/merge\",\n        filename: \"route\",\n        bundlePath: \"app/api/merge/route\"\n    },\n    resolvedPagePath: \"D:\\\\Cursor\\\\face2exchange\\\\app\\\\api\\\\merge\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_Cursor_face2exchange_app_api_merge_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/merge/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZtZXJnZSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGbWVyZ2UlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZtZXJnZSUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDQ3Vyc29yJTVDZmFjZTJleGNoYW5nZSU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9RCUzQSU1Q0N1cnNvciU1Q2ZhY2UyZXhjaGFuZ2UmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQ3NEO0FBQ3ZDO0FBQ2tCO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUdBQXVHO0FBQy9HO0FBQ2lKOztBQUVqSiIsInNvdXJjZXMiOlsid2VicGFjazovL2ZhY2Utc3dhcC1hcHAvPzQ4ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwibmV4dC9kaXN0L3NlcnZlci9ub2RlLXBvbHlmaWxsLWhlYWRlcnNcIjtcbmltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkQ6XFxcXEN1cnNvclxcXFxmYWNlMmV4Y2hhbmdlXFxcXGFwcFxcXFxhcGlcXFxcbWVyZ2VcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwic3RhbmRhbG9uZVwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9tZXJnZS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL21lcmdlXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9tZXJnZS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkQ6XFxcXEN1cnNvclxcXFxmYWNlMmV4Y2hhbmdlXFxcXGFwcFxcXFxhcGlcXFxcbWVyZ2VcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvbWVyZ2Uvcm91dGVcIjtcbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmerge%2Froute&page=%2Fapi%2Fmerge%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmerge%2Froute.ts&appDir=D%3A%5CCursor%5Cface2exchange%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCursor%5Cface2exchange&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/merge/route.ts":
/*!********************************!*\
  !*** ./app/api/merge/route.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n\nasync function compressImage(file) {\n    try {\n        console.log(\"开始压缩图片...\");\n        const buffer = await file.arrayBuffer();\n        const fileBuffer = Buffer.from(buffer);\n        let sharpInstance;\n        try {\n            // 尝试动态导入 sharp\n            const sharpModule = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! sharp */ \"sharp\", 23));\n            sharpInstance = sharpModule.default;\n            console.log(\"Sharp 模块加载成功\");\n        } catch (error) {\n            console.error(\"Sharp 模块加载失败:\", error);\n            // 如果无法加载 sharp，返回原图\n            return file;\n        }\n        try {\n            console.log(\"开始处理图片\");\n            const compressedBuffer = await sharpInstance(fileBuffer).resize(1920, 1920, {\n                fit: \"inside\",\n                withoutEnlargement: true\n            }).jpeg({\n                quality: 80,\n                progressive: true\n            }).toBuffer();\n            console.log(\"图片压缩完成\");\n            return new File([\n                compressedBuffer\n            ], file.name, {\n                type: \"image/jpeg\"\n            });\n        } catch (processError) {\n            console.error(\"图片处理失败:\", processError);\n            return file;\n        }\n    } catch (error) {\n        console.error(\"图片压缩过程出错:\", error);\n        // 如果压缩失败，返回原图\n        return file;\n    }\n}\nasync function uploadToImageHub(file, retryCount = 0) {\n    try {\n        const formData = new FormData();\n        formData.append(\"source\", file);\n        console.log(\"准备上传图片到图床:\", {\n            url: process.env.IMAGEHUB_API_URL,\n            method: \"POST\",\n            file: {\n                type: file.type,\n                size: `${(file.size / 1024 / 1024).toFixed(2)}MB`,\n                lastModified: file instanceof File ? new Date(file.lastModified).toISOString() : \"N/A\",\n                name: file instanceof File ? file.name : \"blob\"\n            },\n            retryCount\n        });\n        const requestHeaders = {\n            \"X-API-Key\": \"***\" + process.env.IMAGEHUB_API_KEY.slice(-6)\n        };\n        console.log(\"请求头:\", requestHeaders);\n        console.log(\"FormData 内容:\");\n        for (const [key, value] of formData.entries()){\n            console.log(\"- \", key, \":\", {\n                type: value instanceof Blob ? value.type : typeof value,\n                size: value instanceof Blob ? `${(value.size / 1024 / 1024).toFixed(2)}MB` : \"N/A\",\n                name: value instanceof File ? value.name : \"blob\"\n            });\n        }\n        const startTime = Date.now();\n        const response = await fetch(process.env.IMAGEHUB_API_URL, {\n            method: \"POST\",\n            headers: {\n                \"X-API-Key\": process.env.IMAGEHUB_API_KEY\n            },\n            body: formData\n        });\n        const endTime = Date.now();\n        console.log(\"图床响应详情:\", {\n            timing: {\n                startTime: new Date(startTime).toISOString(),\n                endTime: new Date(endTime).toISOString(),\n                duration: `${endTime - startTime}ms`\n            },\n            status: {\n                code: response.status,\n                text: response.statusText\n            },\n            headers: Object.fromEntries(response.headers.entries()),\n            type: response.type,\n            url: response.url,\n            redirected: response.redirected\n        });\n        if (!response.ok) {\n            const errorText = await response.text();\n            console.error(\"图床上传失败:\", {\n                status: response.status,\n                statusText: response.statusText,\n                responseBody: errorText,\n                timestamp: new Date().toISOString()\n            });\n            throw new Error(\"图片上传失败\");\n        }\n        const result = await response.json();\n        console.log(\"图床上传成功:\", {\n            timing: {\n                total: `${endTime - startTime}ms`,\n                timestamp: new Date().toISOString()\n            },\n            response: {\n                status_code: result.status_code,\n                status_txt: result.status_txt,\n                image: result.image\n            },\n            request: {\n                originalFile: {\n                    type: file.type,\n                    size: `${(file.size / 1024 / 1024).toFixed(2)}MB`,\n                    name: file instanceof File ? file.name : \"blob\"\n                }\n            }\n        });\n        if (result.status_code !== 200) {\n            console.error(\"图床返回错误:\", {\n                result,\n                timestamp: new Date().toISOString(),\n                requestDetails: {\n                    fileType: file.type,\n                    fileSize: `${(file.size / 1024 / 1024).toFixed(2)}MB`\n                }\n            });\n            throw new Error(result.status_txt || \"图片上传失败\");\n        }\n        return result.image.url;\n    } catch (error) {\n        if (retryCount < 2) {\n            console.log(`上传失败，准备重试 (第${retryCount + 1}次):`, {\n                error: error instanceof Error ? error.message : String(error),\n                nextAction: \"尝试压缩后重新上传\",\n                timestamp: new Date().toISOString(),\n                fileInfo: {\n                    type: file.type,\n                    size: `${(file.size / 1024 / 1024).toFixed(2)}MB`,\n                    name: file instanceof File ? file.name : \"blob\"\n                }\n            });\n            const compressedFile = await compressImage(file instanceof File ? file : new File([\n                file\n            ], \"image.jpg\"));\n            return uploadToImageHub(compressedFile, retryCount + 1);\n        }\n        console.error(\"图片上传最终失败:\", {\n            error: error instanceof Error ? error.message : String(error),\n            stack: error instanceof Error ? error.stack : undefined,\n            retryCount,\n            timestamp: new Date().toISOString(),\n            fileDetails: {\n                type: file.type,\n                size: `${(file.size / 1024 / 1024).toFixed(2)}MB`,\n                name: file instanceof File ? file.name : \"blob\"\n            }\n        });\n        throw error;\n    }\n}\nasync function fetchWithRetry(url, options, retries = 3, delay = 1000) {\n    let lastError = new Error(\"Unknown error\");\n    for(let attempt = 0; attempt < retries; attempt++){\n        try {\n            const response = await fetch(url, options);\n            if (response.ok) return response;\n            const errorText = await response.text();\n            throw new Error(`HTTP error! status: ${response.status} - ${errorText}`);\n        } catch (error) {\n            lastError = error instanceof Error ? error : new Error(String(error));\n            console.log(`请求失败，第 ${attempt + 1} 次重试:`, {\n                error: lastError.message,\n                nextRetryIn: attempt < retries - 1 ? `${delay}ms` : \"no more retries\",\n                url,\n                timestamp: new Date().toISOString()\n            });\n            if (attempt < retries - 1) {\n                await new Promise((resolve)=>setTimeout(resolve, delay));\n                continue;\n            }\n        }\n    }\n    throw lastError;\n}\nasync function downloadAndUploadImage(url) {\n    try {\n        console.log(\"开始下载图片:\", url);\n        const controller = new AbortController();\n        const timeout = setTimeout(()=>controller.abort(), 30000);\n        const response = await fetchWithRetry(url, {\n            signal: controller.signal,\n            headers: {\n                \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\",\n                \"Accept\": \"image/*, */*\",\n                \"Accept-Encoding\": \"gzip, deflate, br\",\n                \"Connection\": \"keep-alive\"\n            },\n            keepalive: true\n        }, 3, 1000 // 重试延迟\n        ).finally(()=>clearTimeout(timeout));\n        if (!response.ok) {\n            console.error(\"图片下载失败:\", {\n                status: response.status,\n                statusText: response.statusText,\n                headers: Object.fromEntries(response.headers.entries())\n            });\n            throw new Error(`图片下载失败: ${response.status} ${response.statusText}`);\n        }\n        const contentType = response.headers.get(\"content-type\");\n        if (!contentType?.startsWith(\"image/\")) {\n            console.error(\"响应不是图片:\", contentType);\n            throw new Error(\"下载的内容不是图片\");\n        }\n        const blob = await response.blob();\n        console.log(\"图片下载完成\", {\n            size: `${(blob.size / 1024 / 1024).toFixed(2)}MB`,\n            type: blob.type\n        });\n        return await uploadToImageHub(blob);\n    } catch (error) {\n        console.error(\"下载并上传图片失败:\", {\n            error: error instanceof Error ? error.message : String(error),\n            stack: error instanceof Error ? error.stack : undefined,\n            url,\n            timestamp: new Date().toISOString()\n        });\n        throw error;\n    }\n}\nasync function POST(request) {\n    try {\n        // 1. 环境变量验证\n        const requiredEnvVars = [\n            \"WORKFLOW_ID\",\n            \"COZE_API_URL\",\n            \"AUTHORIZATION\",\n            \"IMAGEHUB_API_URL\",\n            \"IMAGEHUB_API_KEY\"\n        ];\n        const missingVars = requiredEnvVars.filter((key)=>!process.env[key]);\n        if (missingVars.length > 0) {\n            console.error(\"缺少环境变量:\", missingVars);\n            return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n                error: `配置错误: 缺少环境变量 ${missingVars.join(\", \")}`,\n                errorType: \"ConfigError\"\n            }), {\n                status: 500,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        // 2. 请求验证\n        const formData = await request.formData().catch((error)=>{\n            console.error(\"解析表单数据失败:\", error);\n            return null;\n        });\n        if (!formData) {\n            return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n                error: \"无效的请求数据\",\n                errorType: \"ValidationError\"\n            }), {\n                status: 400,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        const image1 = formData.get(\"image1\");\n        const image2 = formData.get(\"image2\");\n        if (!image1 || !image2) {\n            return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n                error: \"请提供两张图片\",\n                errorType: \"ValidationError\"\n            }), {\n                status: 400,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        // 3. 图片处理\n        try {\n            console.log(\"开始上传原始图片...\");\n            const [image1Url, image2Url] = await Promise.all([\n                uploadToImageHub(image1),\n                uploadToImageHub(image2)\n            ]);\n            // 4. 调用 Coze API\n            console.log(\"调用 Coze API...\");\n            const cozeResponse = await fetch(process.env.COZE_API_URL, {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": `Bearer ${process.env.AUTHORIZATION.trim()}`,\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    workflow_id: process.env.WORKFLOW_ID.trim(),\n                    parameters: {\n                        face_image: image1Url,\n                        base_image: image2Url\n                    }\n                })\n            });\n            if (!cozeResponse.ok) {\n                const errorText = await cozeResponse.text();\n                console.error(\"Coze API 错误响应:\", errorText);\n                return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n                    error: \"AI 处理失败\",\n                    errorType: \"CozeAPIError\",\n                    details: errorText\n                }), {\n                    status: 502,\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n            }\n            const cozeResult = await cozeResponse.json();\n            if (cozeResult.code !== 0) {\n                return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n                    error: cozeResult.msg || \"AI 处理失败\",\n                    errorType: \"CozeAPIError\",\n                    details: cozeResult\n                }), {\n                    status: 502,\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n            }\n            // 5. 处理返回的图片\n            const outputData = typeof cozeResult.data === \"string\" ? JSON.parse(cozeResult.data) : cozeResult.data;\n            if (!outputData?.output) {\n                return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n                    error: \"处理结果无效\",\n                    errorType: \"ProcessError\",\n                    details: cozeResult\n                }), {\n                    status: 500,\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n            }\n            // 6. 上传结果图片到图床\n            const finalImageUrl = await downloadAndUploadImage(outputData.output);\n            return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n                resultUrl: finalImageUrl,\n                originalUrl: outputData.output,\n                rawResponse: cozeResult\n            }), {\n                status: 200,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        } catch (error) {\n            console.error(\"处理过程错误:\", {\n                error: error instanceof Error ? error.message : String(error),\n                stack: error instanceof Error ? error.stack : undefined,\n                timestamp: new Date().toISOString(),\n                details: error instanceof Error ? error.cause : undefined\n            });\n            return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n                error: error instanceof Error ? error.message : \"处理失败\",\n                errorType: \"ProcessError\",\n                details: error instanceof Error ? error.stack : undefined\n            }), {\n                status: 500,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n    } catch (error) {\n        // 最外层错误处理\n        console.error(\"API 致命错误:\", error);\n        return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](JSON.stringify({\n            error: \"服务器内部错误\",\n            errorType: \"ServerError\",\n            details: error instanceof Error ? error.stack : undefined\n        }), {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/merge/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fmerge%2Froute&page=%2Fapi%2Fmerge%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fmerge%2Froute.ts&appDir=D%3A%5CCursor%5Cface2exchange%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CCursor%5Cface2exchange&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();